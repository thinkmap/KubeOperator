# Generated by Django 2.1.11 on 2020-02-10 06:18

from django.db import migrations


class Migration(migrations.Migration):
    dependencies = [
        ('kubeops_api', '0070_auto_20200224_0741'),
        ('storage', '0009_clustercephstorage'),
    ]

    def forwards_func(apps, schema_editor):
        Item = apps.get_model("kubeops_api", "Item")
        ItemResource = apps.get_model("kubeops_api", "ItemResource")
        db_alias = schema_editor.connection.alias
        item = Item.objects.using(db_alias).get(name="KubeOperator")
        ##获取所有类型的Resource 并添加到ItemResource表中
        if item is None:
            Item.objects.using(db_alias).bulk_create([
                Item(name="KubeOperator", description="默认项目"),
            ])
            item = Item.objects.using(db_alias).get(name="KubeOperator")
        item_id = item.id
        # 集群
        Cluster = apps.get_model("kubeops_api", "Cluster")
        clusters = Cluster.objects.using(db_alias).all()
        item_resources = []
        for cluster in clusters:
            item_resource = ItemResource(item_id=item_id, resource_id=cluster.id,
                                         resource_type='CLUSTER')
            item_resources.append(item_resource)
        #主机
        Host = apps.get_model("kubeops_api", "Host")
        hosts = Host.objects.using(db_alias).all()
        for host in hosts:
            item_resource = ItemResource(item_id=item_id, resource_id=host.id,
                                         resource_type='HOST')
            item_resources.append(item_resource)
        #备份账号
        BackupStorage = apps.get_model("kubeops_api", "BackupStorage")
        backup_storages = BackupStorage.objects.using(db_alias).all()
        for backup_storage in backup_storages:
            item_resource = ItemResource(item_id=item_id, resource_id=backup_storage.id,
                                         resource_type='BACKUP_STORAGE')
            item_resources.append(item_resource)
        #nfs
        print(apps)
        NfsStorage = apps.get_model("storage", "NfsStorage")
        nfs_list = NfsStorage.objects.using(db_alias).all()
        for nfs in nfs_list:
            item_resource = ItemResource(item_id=item_id, resource_id=nfs.id,
                                         resource_type='STORAGE')
            item_resources.append(item_resource)
        #ceph
        CephStorage = apps.get_model("storage", "CephStorage")
        ceph_list = CephStorage.objects.using(db_alias).all()
        for ceph in ceph_list:
            item_resource = ItemResource(item_id=item_id, resource_id=ceph.id,
                                         resource_type='STORAGE')
            item_resources.append(item_resource)
        #plan
        Plan = apps.get_model("cloud_provider", "Plan")
        plan_list = Plan.objects.using(db_alias).all()
        for plan in plan_list:
            item_resource = ItemResource(item_id=item_id, resource_id=plan.id,
                                         resource_type='PLAN')
            item_resources.append(item_resource)
        ItemResource.objects.using(db_alias).bulk_create(item_resources)


    operations = [
        migrations.RunPython(forwards_func),
    ]


