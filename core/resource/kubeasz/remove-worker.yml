- hosts: new_node
  roles:
    - scale

- hosts: "{{groups['new_node'][0]}}"
  tasks:
    - name: drain node
      shell: "kubectl drain {{item}} --delete-local-data --force --ignore-daemonsets"
      with_items: "{{groups['new_node']}}"

    - name: remove node
      shell: "kubectl delete node {{item}}"
      with_items: "{{groups['new_node']}}"

# to clean 'new_node' nodes
- hosts:
    - new_node
  tasks:
    - name: stop and disable kube-node service
      service: name={{ item }} state=stopped enabled=no
      with_items:
        - kubelet
        - kube-proxy
      ignore_errors: true

    - name: umount kubelet filesystems
      shell: "mount | grep '/var/lib/kubelet'| awk '{print $3}'|xargs umount || exit 0"
      args:
        warn: false
      ignore_errors: true

    - name: remove files and dirs of 'kube-node' nodes
      file: name={{ item }} state=absent
      with_items:
        - "/var/lib/kubelet/"
        - "/var/lib/kube-proxy/"
        - "/etc/systemd/system/kubelet.service"
        - "/etc/systemd/system/kube-proxy.service"
        - "/opt/kube/kube-system/"
        - "/etc/kubernetes/"
        - "/root/.kube/config"

    - name: remove files and dirs of 'rook-ceph'
      file: name={{ item }} state=absent
      with_items:
        - "/var/lib/rook/"
        - "{{ rook_path }}"
      when:
        - 'storage_rook_ceph_enabled is defined'
        - 'storage_rook_ceph_enabled'
        - 'device_type == "path"'
      ignore_errors: true

# to clean container runtime and networking
- hosts:
    - new_node
  tasks:
    - block:
        - name: stop and disable docker service
          service:
            name: docker
            state: stopped
            enabled: no
          ignore_errors: true

        # as k8s-network-plugins use host-network, '/var/run/docker/netns/default' must be umounted
        - name: unmount docker filesystem-1
          mount: path=/var/run/docker/netns/default state=unmounted

        - name: unmount docker filesystem-2
          mount: path={{ STORAGE_DIR }}/overlay state=unmounted
          when: 'STORAGE_DIR is defined'

        - name: unmount docker filesystem-2
          mount: path=/var/lib/docker/overlay state=unmounted
          when: 'STORAGE_DIR is not defined'

        - name: remove files and dirs
          file: name={{ item }} state=absent
          with_items:
            - "{{ STORAGE_DIR }}/"
            - "/var/run/docker/"
            - "/etc/systemd/system/docker.service"
            - "/etc/systemd/system/docker.service.requires/"
            - "/etc/systemd/system/docker.service.d/"
            - "/etc/bash_completion.d/docker"
            - "/usr/bin/docker"
          when: 'STORAGE_DIR is defined'

        - name: remove files and dirs
          file: name={{ item }} state=absent
          with_items:
            - "/var/lib/docker/"
            - "/var/run/docker/"
            - "/etc/systemd/system/docker.service"
            - "/etc/systemd/system/docker.service.requires/"
            - "/etc/systemd/system/docker.service.d/"
            - "/etc/bash_completion.d/docker"
            - "/usr/bin/docker"
          when: 'STORAGE_DIR is not defined'
      when: CONTAINER_RUNTIME == 'docker'
      ignore_errors: true

    - name: remove files and dirs2
      file: name={{ item }} state=absent
      with_items:
        - "/etc/cni/"
        - "/run/flannel/"
        - "/etc/calico/"
        - "/var/run/calico/"
        - "/var/lib/calico/"
        - "/var/log/calico/"
        - "/etc/cilium/"
        - "/var/run/cilium/"
        - "/sys/fs/bpf/tc/"
        - "/var/lib/cni/"
        - "/var/lib/kube-router/"
        - "/opt/kube/kube-system/"
        - "/var/run/openvswitch/"
        - "/etc/origin/openvswitch/"
        - "/etc/openvswitch/"
        - "/var/log/openvswitch/"

    - name: cleanup iptables
      shell: "iptables -F && iptables -X \
	&& iptables -F -t nat && iptables -X -t nat \
	&& iptables -F -t raw && iptables -X -t raw \
	&& iptables -F -t mangle && iptables -X -t mangle"

    - name: cleanup networks1
      shell: "ip link del tunl0; \
        ip link del flannel.1; \
        ip link del kube-ipvs0; \
	    ip link del cni0; \
        ip link del mynet0;"
      ignore_errors: true

    - name: cleanup networks2
      shell: "ip link del docker0; \
	systemctl restart network"
      ignore_errors: true

    - name: cleanup 'calico' routes
      shell: "for rt in `ip route|grep bird|sed 's/blackhole//'|awk '{print $1}'`;do ip route del $rt;done;"
      when: "CLUSTER_NETWORK == 'calico'"
      ignore_errors: true

# to clean 'lb' nodes
- hosts:
    - lb
    - ex-lb
  tasks:
    - name: stop keepalived service
      shell: systemctl disable keepalived && systemctl stop keepalived
      ignore_errors: true

    - name: stop haproxy service
      shell: systemctl disable haproxy && systemctl stop haproxy
      ignore_errors: true

    - name: remove files and dirs
      file: name={{ item }} state=absent
      with_items:
        - "/etc/haproxy"
        - "/etc/keepalived"

# to clean ntp, certs and keys, env path
- hosts:
    - new_node
  tasks:
    - name: stop and disable chrony in Ubuntu
      service: name=chrony state=stopped enabled=no
      ignore_errors: true
      tags: rm_ntp
      when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"

    - name: stop and disable chronyd in CentOS/RedHat
      service: name=chronyd state=stopped enabled=no
      ignore_errors: true
      tags: rm_ntp
      when: ansible_distribution == "CentOS" or ansible_distribution == "RedHat"

    - name: clean certs and keys
      file: name={{ item }} state=absent
      with_items:
        - "/etc/kubernetes/"
        - "{{ ca_dir }}"
        - "/root/.kube/config"
        - "/etc/docker/"

    - name: clean 'ENV PATH'
      lineinfile:
        dest: ~/.bashrc
        state: absent
        regexp: '{{ item }}'
      with_items:
        - 'kubeasz'
        - 'helm completion'
        - 'kubectl completion'
        - 'crictl completion'
        - 'HELM_TLS_ENABLE'

    - name: 重启提示 WARNNING
      debug:
        msg: "[重要]: 请重启节点以确保清除系统残留的虚拟网卡、路由信息、iptalbes|ipvs规则等"