apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "kubeapps.mongodb-jobs-cleanup.fullname" . }}
  annotations:
    helm.sh/hook: post-delete
    helm.sh/hook-delete-policy: hook-succeeded
  labels:
    app: {{ template "kubeapps.mongodb-jobs-cleanup.fullname" . }}
    chart: {{ template "kubeapps.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  template:
    metadata:
      labels:
        app: {{ template "kubeapps.mongodb-jobs-cleanup.fullname" . }}
        release: {{ .Release.Name }}
    spec:
{{- include "kubeapps.imagePullSecrets" . | indent 6 }}
      {{- if .Values.hooks.affinity }}
      affinity: {{- include "kubeapps.tplValue" (dict "value" .Values.hooks.affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.hooks.nodeSelector }}
      nodeSelector: {{- include "kubeapps.tplValue" (dict "value" .Values.hooks.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.hooks.tolerations }}
      tolerations: {{- include "kubeapps.tplValue" (dict "value" .Values.hooks.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.securityContext.enabled }}
      securityContext:
        fsGroup: {{ .Values.securityContext.fsGroup }}
        runAsUser: {{ .Values.securityContext.runAsUser }}
      {{- end }}
      restartPolicy: OnFailure
      serviceAccountName: {{ template "kubeapps.mongodb-jobs-cleanup.fullname" . }}
      containers:
        - name: kubectl
          image: {{ template "kubeapps.image" (list .Values.hooks.image .Values.global) }}
          command:
            - /bin/sh
          args:
            - -c
            - "kubectl delete secret -n {{ .Release.Namespace }} {{ .Values.mongodb.existingSecret }} || true"
