- block:
    - name: prepare local volume deploy directory
      file: name={{ base_dir }}/manifests/storage/local-volume state=directory

    - name: prepare storageclass file
      template:
        src: local-volume/storageclass.yaml.j2
        dest: "{{ base_dir }}/manifests/storage/local-volume/storageclass.yaml"

    - name: deploy local-volume storageclass
      shell: "{{ bin_dir }}/kubectl apply -f {{ base_dir }}/manifests/storage/local-volume/storageclass.yaml"
      ignore_errors: true

    - name: set default storageClass
      shell: "{{ bin_dir }}/kubectl patch storageclass '{{ storageClassName }}' -p '{{ default_label }}'"
      ignore_errors: true
  delegate_to: "{{ groups['kube-master'][0] }}"
  run_once: true

- block:
    - name: prepare local-volume directory
      file: name={{ local_volume_path }}/{{ item }} state=directory
      delegate_to: "worker1.{{cluster_name}}.{{cluster_domain}}"
      with_items: "{{ local_volume_dirs }}"

    - name: set local volume directory permissions
      file: path={{ local_volume_path }}/{{ item }} state=directory mode=0755 recurse=yes
      delegate_to: "worker1.{{cluster_name}}.{{cluster_domain}}"
      with_items: "{{ local_volume_dirs }}"
  run_once: true

- block:
    - name: prepare local volume pv file
      template:
        src: local-volume/{{ item }}.yaml.j2
        dest: "{{ base_dir }}/manifests/storage/local-volume/{{ item }}.yaml"
      with_items: "{{ pv_files }}"

    - name: create local volume pv
      shell: "{{ bin_dir }}/kubectl apply -f {{ base_dir }}/manifests/storage/local-volume/"
  delegate_to: "{{ groups['kube-master'][0] }}"
  run_once: true
