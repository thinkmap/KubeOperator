- block:
    - name: prepare rook-ceph conf directory
      file: name=/var/lib/rook state=directory
      delegate_to: "{{ item }}"
      with_items: "{{ groups['kube-node'] }}"

    - name: prepare rook-ceph conf directory
      file: name={{ rook_path }} state=directory
      delegate_to: "{{ item }}"
      with_items: "{{ groups['kube-node'] }}"
      when: "device_type == 'path'"
  run_once: true

- block:
    - name: prepare rook-ceph deploy directory
      file: name={{ base_dir }}/manifests/storage/rook state=directory

    - name: prepare rook-crd file
      template:
        src: rook-ceph/common.yaml.j2
        dest: "{{ base_dir }}/manifests/storage/rook/common.yaml"

    - name: deploy rook-crd
      shell: "{{ bin_dir }}/kubectl apply -f {{ base_dir }}/manifests/storage/rook/common.yaml"
      ignore_errors: true

    - name: prepare rook-operator file
      template:
        src: rook-ceph/operator.yaml.j2
        dest: "{{ base_dir }}/manifests/storage/rook/operator.yaml"

    - name: deploy rook-operator
      shell: "{{ bin_dir }}/kubectl apply -f {{ base_dir }}/manifests/storage/rook/operator.yaml"
      ignore_errors: true
  delegate_to: "{{ groups['kube-master'][0] }}"
  run_once: true

- block:
    - name: wait for operator to running
      shell: "{{ bin_dir }}/kubectl -n rook-ceph get pod -o wide | grep rook-discover | grep '{{ inventory_hostname }}' | awk '{print $3}'"
      register: pod_status
      until: pod_status.stdout == "Running"
      retries: 20
      delay: 15
  delegate_to: "{{ groups['kube-master'][0] }}"
  run_once: true

- block:
    - name: prepare rook-cluster file
      template:
        src: rook-ceph/cluster.yaml.j2
        dest: "{{ base_dir }}/manifests/storage/rook/cluster.yaml"

    - name: deploy rook-cluster
      shell: "{{ bin_dir }}/kubectl apply -f {{ base_dir }}/manifests/storage/rook/cluster.yaml"
      ignore_errors: true

    - name: prepare rook-dashboard file
      template:
        src: rook-ceph/dashboard.yaml.j2
        dest: "{{ base_dir }}/manifests/storage/rook/dashboard.yaml"

    - name: deploy rook-dashboard-service
      shell: "{{ bin_dir }}/kubectl apply -f {{ base_dir }}/manifests/storage/rook/dashboard.yaml"
      ignore_errors: true
  delegate_to: "{{ groups['kube-master'][0] }}"
  run_once: true

- block:
    - name: wait for all component complete
      shell: "{{ bin_dir }}/kubectl -n rook-ceph get pod -o wide | grep ceph-osd-prepare | grep worker1 | awk '{print $3}'"
      register: pod_status
      until: pod_status.stdout == "Completed"
      retries: 30
      delay: 15
  delegate_to: "{{ groups['kube-master'][0] }}"
  run_once: true

- block:
    - name: prepare rook-storageclass file
      template:
        src: rook-ceph/storageclass.yaml.j2
        dest: "{{ base_dir }}/manifests/storage/rook/storageclass.yaml"

    - name: deploy rook-storageclass
      shell: "{{ bin_dir }}/kubectl apply -f {{ base_dir }}/manifests/storage/rook/storageclass.yaml"
      ignore_errors: true

    - name: set default storageClass
      shell: "{{ bin_dir }}/kubectl patch storageclass '{{ storageClassName }}' -p '{{default_label}}'"
  delegate_to: "{{ groups['kube-master'][0] }}"
  run_once: true
