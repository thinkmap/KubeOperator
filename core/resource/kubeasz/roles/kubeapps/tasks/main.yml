- block:
    - name: 插入 kubeapps-plus registry hosts 记录
      lineinfile:
        path: "/etc/hosts"
        regexp: "{{ kubeapps_registry_hostname }}"
        line: "{{ hostvars[groups['worker'][0]]['ansible_ssh_host'] }} {{ kubeapps_registry_hostname }}"
      delegate_to: "{{ item }}"
      with_items: "{{ groups['cluster_nodes'] }}"
      run_once: true

    - name: 插入 kubeapps-plus chartmuseum hosts 记录
      lineinfile:
        path: "/etc/hosts"
        regexp: "{{ kubeapps_chartmuseum_hostname }}"
        line: "{{ hostvars[groups['worker'][0]]['ansible_ssh_host'] }} {{ kubeapps_chartmuseum_hostname }}"
      delegate_to: "{{ item }}"
      with_items: "{{ groups['cluster_nodes'] }}"
      run_once: true

- block:
    - name: 创建 kubeapps-plus 目录
      file: path=/opt/kube/kube-system/kubeapps-plus state=directory

    - name: 准备 kubeapps-plus registry ingress 部署文件
      template: src=kubeapps-registry.yaml.j2 dest=/opt/kube/kube-system/kubeapps-plus/kubeapps-registry.yaml

    - name: 创建 kubeapps-plus registry ingress
      shell: "{{ bin_dir }}/kubectl apply -f /opt/kube/kube-system/kubeapps-plus/kubeapps-registry.yaml"

    - name: add nginx-ingress annotate
      shell: "kubectl -n kube-system annotate --overwrite ingress kubeapps-registry-ingress nginx.ingress.kubernetes.io/proxy-body-size=10g"
      when: 'ingress_backend == "nginx"'

- block:
    - name: get all namespace
      command: "{{ bin_dir }}/kubectl get ns"
      register: ns_info

    - name: create kubeapps-plus namespace
      shell: "kubectl create ns kubeapps-plus"
      when: '"kubeapps-plus" not in ns_info.stdout'

    - name: get kubeapps-plus secrets
      command: "{{ bin_dir }}/kubectl -n kubeapps-plus get secrets"
      register: secrets_info

    - name: create kubeapps-plus ceph secret
      shell: "{{ bin_dir }}/kubectl create secret generic ceph-user-secret \
          --namespace=kubeapps-plus \
          --type=kubernetes.io/rbd \
          --from-literal=key={{ ceph_user_secret }}"
      when:
        - '"ceph-user-secret" not in secrets_info.stdout'
        - 'storage_external_ceph_enabled is defined'
        - 'storage_external_ceph_enabled'

    - name: 准备 kubeapps-plus chartmuseum 部署文件
      template: src=kubeapps-chartmuseum.yaml.j2 dest=/opt/kube/kube-system/kubeapps-plus/kubeapps-chartmuseum.yaml

    - name: 创建 kubeapps-plus chartmuseum
      shell: "{{ bin_dir }}/kubectl -n kubeapps-plus apply -f /opt/kube/kube-system/kubeapps-plus/kubeapps-chartmuseum.yaml"

- block:
    - name: 等待 kubeapps-plus chartmuseum running
      shell: "{{ bin_dir }}/kubectl -n kubeapps-plus get deployment | grep chartmuseum | awk '{print $4}'"
      register: deploy_status
      until: deploy_status.stdout == "1"
      retries: 30
      delay: 10

    - name: helm init
      shell: "helm init --client-only --skip-refresh"
      delegate_to: "{{ item }}"
      with_items: "{{ groups['kube-master'] }}"
      run_once: true

    - name: 添加 chartmuseum 仓库
      shell: "helm repo add chartmuseum http://{{ kubeapps_chartmuseum_hostname }}"
      delegate_to: "{{ item }}"
      with_items: "{{ groups['kube-master'] }}"
      retries: 10
      delay: 10

- block:
    - name: 尝试登陆 kubeapps-plus registry
      shell: "docker login {{ kubeapps_registry_hostname }} -u {{REGISTRY_ACCOUNT_NAME}} -p {{REGISTRY_ACCOUNT_PASSWORD}}"
      register: login_result
      until: login_result.rc == 0
      retries: 10
      delay: 10
      delegate_to: "{{ item }}"
      with_items: "{{ groups['cluster_nodes'] }}"
      run_once: true
      ignore_errors: true

- block:
    - name: 拷贝 kubeapps-plus values文件
      template: src=values.yaml.j2 dest={{ base_dir }}/manifests/kubeapps-plus/values.yaml

    - name: 部署 kubeapps-plus
      shell: "helm upgrade kubeapps-plus --namespace=kubeapps-plus --install --force --recreate-pods ./kubeapps-plus"
      args:
        chdir: "{{ base_dir }}/manifests"

    - name: 提示
      debug:
        msg: "应用商店安装已完成，请在服务完全启动后访问 http://kubeapps-plus.{{APP_DOMAIN}} 来使用"
